// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDo.ServerSide.Core;

#nullable disable

namespace ToDo.ServerSide.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ToDo.ServerSide.Core.ToDoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ToDoItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a619c39a-71d1-489a-a9a5-31bba3ec660a"),
                            CreatedOn = new DateTime(2023, 12, 6, 10, 59, 31, 204, DateTimeKind.Local).AddTicks(4201),
                            DueDate = new DateTime(2023, 12, 5, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IsComplete = false,
                            Text = "Видати лаб. 3 для КН-3",
                            UserId = new Guid("c550f404-8615-4c95-97cb-283ea3a64fcd")
                        },
                        new
                        {
                            Id = new Guid("c2089682-81bd-4320-ae1b-66d0fae30ab4"),
                            CreatedOn = new DateTime(2023, 12, 6, 10, 59, 31, 204, DateTimeKind.Local).AddTicks(4285),
                            DueDate = new DateTime(2023, 12, 6, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsComplete = false,
                            Text = "Перечитати курсові КН-4",
                            UserId = new Guid("8be18ed7-a0f2-4f83-9ebb-5cabe34b3cf2")
                        });
                });

            modelBuilder.Entity("ToDo.ServerSide.Core.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c550f404-8615-4c95-97cb-283ea3a64fcd"),
                            Email = "andriy@oa.edu.ua",
                            Name = "Andriy"
                        },
                        new
                        {
                            Id = new Guid("8be18ed7-a0f2-4f83-9ebb-5cabe34b3cf2"),
                            Email = "ivan@oa.edu.ua",
                            Name = "Ivan"
                        });
                });

            modelBuilder.Entity("ToDo.ServerSide.Core.ToDoItem", b =>
                {
                    b.HasOne("ToDo.ServerSide.Core.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDo.ServerSide.Core.User", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
